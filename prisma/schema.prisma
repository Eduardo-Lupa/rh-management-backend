// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  Int      @id @default(autoincrement())
  created_at          DateTime @default(now()) @db.Timestamptz(3)
  name                String
  email               String   @unique
  password            String
  type                UserType
  cell_phone          String
  isActive            Boolean  @default(true)
  employee_company_id Int?

  employee_company  Company? @relation(name: "employee", fields: [employee_company_id], references: [id])
  main_user_company Company? @relation(name: "main_user")
  job               Job[]    @relation(name: "creator_job") // A User can create many jobs

  @@map("users")
}

enum UserType {
  company
  hunter
  admin
}

model Company {
  id           Int      @id @default(autoincrement())
  created_at   DateTime @default(now()) @db.Timestamptz(3)
  name         String
  cnpj         String   @unique
  main_user_id Int      @unique
  isActive     Boolean  @default(true)

  main_user User   @relation(name: "main_user", fields: [main_user_id], references: [id])
  employees User[] @relation(name: "employee") // A Company can have many employees
  jobs      Job[]  @relation(name: "company_job") // A Company can have many jobs

  @@map("companies")
}

enum JobStatus {
  awaiting_approval
  rejected
  approved
  finished
}

model Job {
  id             Int      @id @default(autoincrement())
  created_at     DateTime @default(now()) @db.Timestamptz(3)
  title          String
  description    String
  initial_salary Float
  final_salary   Float
  job_cost_value Float
  expires_at     DateTime
  company_id     Int
  creator_id     Int // user que criou o job
  status         JobStatus   @default(awaiting_approval)

  company Company @relation(name: "company_job", fields: [company_id], references: [id])
  creator User    @relation(name: "creator_job", fields: [creator_id], references: [id])

  @@map("jobs")
}

version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rh_management_api
    ports:
      - "3000:3000" # default port
      - "${API_PORT}:${API_PORT}"
    volumes:
      - .:/usr/src/app # Bind mount: sincroniza o código local com o contêiner
      - /usr/src/app/node_modules # Evita sobrescrever a pasta node_modules
    # command: sh -c "npx prisma migrate deploy && npm run start:prod" # TODO trocar para depoly
    command: sh -c "npx prisma migrate dev --name init && npm run start:dev" # Usa o modo de desenvolvimento do NestJS
    environment:
      - DATABASE_URL=${DATABASE_URL}
    env_file:
      - .env
    depends_on:
      - postgres

  postgres:
    image: postgres:16
    container_name: postgres_db
    ports:
      - "${DB_PORT}:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # usar em caso de verificacao de banco de dados
  # pgadmin:
  #   image: dpage/pgadmin4
  #   container_name: pgadmin
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: admin@admin.com
  #     PGADMIN_DEFAULT_PASSWORD: admin
  #   ports:
  #     - "5050:80"
  #   depends_on:
  #     - postgres

volumes:
  postgres_data:
